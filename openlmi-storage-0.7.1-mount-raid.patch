commit b8ef03ee49135887eba35917ac9084c5deb4bed4
Author: Jan Safranek <jsafrane@redhat.com>
Date:   Tue Jan 28 09:16:49 2014 +0100

    Fixed mounting of MD RAIDs.
    
    blivet reports '/dev/md/<name>' as MDRaidArrayDevice.path, while /proc/mounts
    uses '/dev/md<nr>' and the provider was not able to match the MD RAID to a
    mount point. As result, if a MD RAID array was mounted, the mount was not
    visible through the provider.
    
    We must take special care with MDRaidArrayDevice.path and use '/dev/md<nr>'
    for matching of mount devices.
    
    Conflicts:
    	src/lmi/storage/util/storage.py

diff --git a/src/lmi/storage/LMI_AttachedFileSystem.py b/src/lmi/storage/LMI_AttachedFileSystem.py
index 37eab1a..156339b 100644
--- a/src/lmi/storage/LMI_AttachedFileSystem.py
+++ b/src/lmi/storage/LMI_AttachedFileSystem.py
@@ -1,4 +1,4 @@
-# Copyright (C) 2013 Red Hat, Inc.  All rights reserved.
+# Copyright (C) 2013-2014 Red Hat, Inc.  All rights reserved.
 #
 # This library is free software; you can redistribute it and/or
 # modify it under the terms of the GNU Lesser General Public
@@ -15,6 +15,7 @@
 # Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA
 #
 # Authors: Jan Synacek <jsynacek@redhat.com>
+#          Jan Safranek <jsafrane@redhat.com>
 # -*- coding: utf-8 -*-
 """
 Python Provider for LMI_AttachedFileSystem
@@ -32,6 +33,7 @@ import blivet
 from lmi.storage.MountingProvider import MountingProvider
 import lmi.providers.cmpi_logging as cmpi_logging
 from lmi.providers.ComputerSystem import get_system_name
+from lmi.storage.util import storage
 
 class LMI_AttachedFileSystem(MountingProvider):
     """Instrument the CIM class LMI_AttachedFileSystem
@@ -73,7 +75,7 @@ class LMI_AttachedFileSystem(MountingProvider):
             if isinstance(device, blivet.devices.NoDevice):
                 paths = [device.format.mountpoint]
             else:
-                paths = blivet.util.get_mount_paths(device.path)
+                paths = storage.get_mount_paths(device)
 
             for path in paths:
                 provider = self.provider_manager.get_provider_for_format(device, device.format)
diff --git a/src/lmi/storage/LMI_HostedMount.py b/src/lmi/storage/LMI_HostedMount.py
index 358f547..fd87ebb 100644
--- a/src/lmi/storage/LMI_HostedMount.py
+++ b/src/lmi/storage/LMI_HostedMount.py
@@ -1,4 +1,4 @@
-# Copyright (C) 2013 Red Hat, Inc.  All rights reserved.
+# Copyright (C) 2013-2014 Red Hat, Inc.  All rights reserved.
 #
 # This library is free software; you can redistribute it and/or
 # modify it under the terms of the GNU Lesser General Public
@@ -15,6 +15,7 @@
 # Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA
 #
 # Authors: Jan Synacek <jsynacek@redhat.com>
+#          Jan Safranek <jsafrane@redhat.com>
 # -*- coding: utf-8 -*-
 """
 Python Provider for LMI_HostedMount
@@ -32,7 +33,7 @@ import blivet
 from lmi.storage.MountingProvider import MountingProvider
 import lmi.providers.cmpi_logging as cmpi_logging
 from lmi.providers.ComputerSystem import get_system_name
-
+from lmi.storage.util import storage
 
 class LMI_HostedMount(MountingProvider):
     """Instrument the CIM class LMI_HostedMount
@@ -73,7 +74,7 @@ class LMI_HostedMount(MountingProvider):
             if isinstance(device, blivet.devices.NoDevice):
                 paths = [device.format.mountpoint]
             else:
-                paths = blivet.util.get_mount_paths(device.path)
+                paths = storage.get_mount_paths(device)
 
             for path in paths:
                 model['Antecedent'] = pywbem.CIMInstanceName(
diff --git a/src/lmi/storage/LMI_MountPoint.py b/src/lmi/storage/LMI_MountPoint.py
index 1071d20..1edc436 100644
--- a/src/lmi/storage/LMI_MountPoint.py
+++ b/src/lmi/storage/LMI_MountPoint.py
@@ -1,4 +1,4 @@
-# Copyright (C) 2013 Red Hat, Inc.  All rights reserved.
+# Copyright (C) 2013-2014 Red Hat, Inc.  All rights reserved.
 #
 # This library is free software; you can redistribute it and/or
 # modify it under the terms of the GNU Lesser General Public
@@ -15,6 +15,7 @@
 # Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA
 #
 # Authors: Jan Synacek <jsynacek@redhat.com>
+#          Jan Safranek <jsafrane@redhat.com>
 # -*- coding: utf-8 -*-
 """
 Python Provider for LMI_MountPoint
@@ -32,6 +33,7 @@ import blivet
 from lmi.storage.MountingProvider import MountingProvider
 import lmi.providers.cmpi_logging as cmpi_logging
 from lmi.providers.ComputerSystem import get_system_name
+from lmi.storage.util import storage
 
 class LMI_MountPoint(MountingProvider):
     """Instrument the CIM class LMI_MountPoint
@@ -73,7 +75,7 @@ class LMI_MountPoint(MountingProvider):
             if isinstance(device, blivet.devices.NoDevice):
                 paths = [device.format.mountpoint]
             else:
-                paths = blivet.util.get_mount_paths(device.path)
+                paths = storage.get_mount_paths(device)
 
             for path in paths:
                 provider = self.provider_manager.get_provider_for_format(device, device.format)
diff --git a/src/lmi/storage/LMI_MountedFileSystem.py b/src/lmi/storage/LMI_MountedFileSystem.py
index 0f36e6b..1d6ad42 100644
--- a/src/lmi/storage/LMI_MountedFileSystem.py
+++ b/src/lmi/storage/LMI_MountedFileSystem.py
@@ -1,4 +1,4 @@
-# Copyright (C) 2013 Red Hat, Inc.  All rights reserved.
+# Copyright (C) 2013-2014 Red Hat, Inc.  All rights reserved.
 #
 # This library is free software; you can redistribute it and/or
 # modify it under the terms of the GNU Lesser General Public
@@ -15,6 +15,7 @@
 # Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA
 #
 # Authors: Jan Synacek <jsynacek@redhat.com>
+#          Jan Safranek <jsafrane@redhat.com>
 # -*- coding: utf-8 -*-
 """
 Python Provider for LMI_MountedFileSystem
@@ -34,6 +35,7 @@ from lmi.storage.SettingHelper import SettingHelper
 from lmi.storage.SettingManager import StorageSetting
 from lmi.storage.SettingProvider import SettingProvider, Setting
 import lmi.providers.cmpi_logging as cmpi_logging
+from lmi.storage.util import storage
 
 class LMI_MountedFileSystem(BaseProvider, SettingHelper):
     """Instrument the CIM class LMI_MountedFileSystem
@@ -107,7 +109,7 @@ class LMI_MountedFileSystem(BaseProvider, SettingHelper):
         else:
             if device is None:
                 raise pywbem.CIMError(pywbem.CIM_ERR_FAILED, "No such mounted device: " + spec)
-            if path not in blivet.util.get_mount_paths(spec):
+            if path not in storage.get_mount_paths(device):
                 raise not_mounted_ex
 
         model['InstanceID'] = self._create_instance_id(self._create_id(spec, path))
@@ -142,7 +144,7 @@ class LMI_MountedFileSystem(BaseProvider, SettingHelper):
                 model['FileSystemSpec'] = device.path
                 yield _yield_instance(env, model, keys_only)
             else:
-                for path in blivet.util.get_mount_paths(device.path):
+                for path in storage.get_mount_paths(device):
                     model['MountPointPath'] = path
                     model['FileSystemSpec'] = device.path
                     yield _yield_instance(env, model, keys_only)
@@ -196,7 +198,7 @@ class LMI_MountedFileSystem(BaseProvider, SettingHelper):
             if isinstance(device, blivet.devices.NoDevice):
                 yield self._get_setting_for_mount(device, device.format.mountpoint, setting_provider)
             else:
-                for path in blivet.util.get_mount_paths(device.path):
+                for path in storage.get_mount_paths(device):
                     yield self._get_setting_for_mount(device, path, setting_provider)
 
     @cmpi_logging.trace_method
@@ -224,7 +226,7 @@ class LMI_MountedFileSystem(BaseProvider, SettingHelper):
         else:
             if device is None:
                 return None
-            if path not in blivet.util.get_mount_paths(spec):
+            if path not in storage.get_mount_paths(device):
                 return None
 
         return self._get_setting_for_mount(device, path, setting_provider)
diff --git a/src/lmi/storage/MountingProvider.py b/src/lmi/storage/MountingProvider.py
index 77dc2ed..fe611b1 100644
--- a/src/lmi/storage/MountingProvider.py
+++ b/src/lmi/storage/MountingProvider.py
@@ -1,4 +1,4 @@
-# Copyright (C) 2013 Red Hat, Inc.  All rights reserved.
+# Copyright (C) 2013-2014 Red Hat, Inc.  All rights reserved.
 #
 # This library is free software; you can redistribute it and/or
 # modify it under the terms of the GNU Lesser General Public
@@ -15,6 +15,7 @@
 # Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA
 #
 # Authors: Jan Synacek <jsynacek@redhat.com>
+#          Jan Safranek <jsafrane@redhat.com>
 # -*- coding: utf-8 -*-
 """ Module for MountingProvider class. """
 
@@ -22,6 +23,7 @@ import pywbem
 import blivet
 from lmi.storage.BaseProvider import BaseProvider
 import lmi.providers.cmpi_logging as cmpi_logging
+from lmi.storage.util import storage
 
 class MountingProvider(BaseProvider):
     """
@@ -53,7 +55,7 @@ class MountingProvider(BaseProvider):
         if isinstance(device, blivet.devices.NoDevice):
             paths = [device.format.mountpoint]
         else:
-            paths = blivet.util.get_mount_paths(device.path)
+            paths = storage.get_mount_paths(device)
 
         if device is None or not paths:
             raise pywbem.CIMError(pywbem.CIM_ERR_FAILED, "No such mounted device: " + spec)
diff --git a/src/lmi/storage/util/storage.py b/src/lmi/storage/util/storage.py
index 1898c5b..8f1a3db 100644
--- a/src/lmi/storage/util/storage.py
+++ b/src/lmi/storage/util/storage.py
@@ -1,4 +1,4 @@
-# Copyright (C) 2012-2013 Red Hat, Inc.  All rights reserved.
+# Copyright (C) 2012-2014 Red Hat, Inc.  All rights reserved.
 #
 # This library is free software; you can redistribute it and/or
 # modify it under the terms of the GNU Lesser General Public
@@ -294,3 +294,22 @@ def assert_unused(_blivet, devices):
 
             raise pywbem.CIMError(pywbem.CIM_ERR_FAILED,
                 "Device %s is used by %s." % (device.path, child.path))
+
+def get_mount_paths(device):
+    """
+    Return list of all mount points of given device.
+
+    :param device: Device to inspect.
+    :type device: blivet.StorageDevice.
+    :rtype: list of strings.
+    """
+    if isinstance(device, blivet.devices.MDRaidArrayDevice):
+        # blivet.MDRaidArrayDevice.path is /dev/md/<name>. We must find
+        # appropriate /dev/md<number> device as that's the one which is used in
+        # /proc/mounts
+        path = '/dev/' + blivet.devicelibs.mdraid.md_node_from_name(device.name)
+        LOG().trace_verbose("get_mount_paths: raid %s translated to %s",
+                device.path, path)
+    else:
+        path = device.path
+    return blivet.util.get_mount_paths(path)
